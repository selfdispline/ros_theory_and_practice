<?xml version="1.0"?>
<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- PROPERTY LIST -->
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="20" /> 
    <xacro:property name="base_size_x" value="0.4"/>
    <xacro:property name="base_size_y" value="0.28"/>
    <xacro:property name="base_size_z" value="0.01"/>

    <xacro:property name="motor_mass"   value="5" /> 
    <xacro:property name="motor_size_y" value="0.1"/>
    <xacro:property name="motor_size_x" value="0.05"/>
    <xacro:property name="motor_size_z" value="0.05"/>
    <xacro:property name="motor_joint_x" value="0.14"/>
    <xacro:property name="motor_joint_y" value="0.09"/>
    <xacro:property name="motor_joint_z" value="-0.03"/>

    <xacro:property name="wheel_mass"   value="1" />
    <xacro:property name="wheel_radius" value="0.05"/>
    <xacro:property name="wheel_length" value="0.02"/>
    <xacro:property name="wheel_joint_y" value="0.06"/>

    <xacro:property name="bogies_mass"   value="5" />
    <xacro:property name="bogies_radius" value="0.02"/>
    <xacro:property name="bogies_length" value="0.06"/>
    <xacro:property name="bogies_joint_x" value="-0.14"/>
    <xacro:property name="bogies_joint_y" value="0"/>
    <xacro:property name="bogies_joint_z" value="-0.035"/>

    <xacro:property name="back_wheel_mass"   value="0.5" />
    <xacro:property name="back_wheel_radius" value="0.015"/>    
    <xacro:property name="back_wheel_joint_z" value="-0.03"/>

    <xacro:property name="column_mass"   value="0.2" />
    <xacro:property name="column_radius" value="0.005"/>
    <xacro:property name="column_length" value="0.1"/>
    <xacro:property name="column_joint_x" value="0.09"/>
    <xacro:property name="column_joint_y" value="0.09"/>
    <xacro:property name="column_joint_z" value="0.055"/>

    <xacro:property name="up_board_mass"   value="10" /> 
    <xacro:property name="up_board_size_x" value="0.2"/>
    <xacro:property name="up_board_size_y" value="0.2"/>
    <xacro:property name="up_board_size_z" value="0.01"/>
    <xacro:property name="up_board_joint_z" value="0.1"/>

    <xacro:property name="battery_mass"   value="1" /> 
    <xacro:property name="battery_size_y" value="0.18"/>
    <xacro:property name="battery_size_x" value="0.08"/>
    <xacro:property name="battery_size_z" value="0.04"/>
    <xacro:property name="battery_joint_x" value="-0.14"/>
    <xacro:property name="battery_joint_z" value="0.025"/>



    <!-- Defining the colors used in this robot -->
    <material name="yellow">
        <color rgba="1 0.4 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95"/>
    </material>
    <material name="gray">
        <color rgba="0.75 0.75 0.75 1"/>
    </material>
    <material name="blue">
        <color rgba="0 0.3 0.9 1"/>
    </material>

    <!-- Macro for inertia matrix -->
    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <xacro:macro name="box_inertial_matrix" params="m x y z">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
                iyy="${m*(x*x+z*z)/12}" iyz = "0"
                izz="${m*(x*x+y*y)/12}" /> 
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <!-- Macro for robot wheel -->
    <xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="0 ${reflect*wheel_joint_y} 0" rpy="0 0 0"/>
            <parent link="${prefix}_motor_link"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
        </link>

        <gazebo reference="${prefix}_wheel_link">
            <material>Gazebo/Gray</material>
        </gazebo>

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="${prefix}_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_wheel_joint_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

 <!-- Macro for robot motor -->
    <xacro:macro name="motor" params="prefix reflect">
        <joint name="${prefix}_motor_joint" type="fixed">
            <origin xyz="${motor_joint_x} ${reflect*motor_joint_y} ${motor_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_motor_link"/>            
        </joint>

        <link name="${prefix}_motor_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${motor_size_x} ${motor_size_y} ${motor_size_z}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                      <box size="${motor_size_x} ${motor_size_y} ${motor_size_z}" />
                </geometry>
            </collision>
            <box_inertial_matrix  m="${motor_mass}" x="${motor_size_x}" y="${motor_size_y}" z="${motor_size_z}" />
        </link>

        <gazebo reference="${prefix}_motor_link">
            <material>Gazebo/Black</material>
        </gazebo>        
    </xacro:macro> 

     <!-- Macro for robot column -->   
    <xacro:macro name="column" params="prefix reflect_x reflect_y">
        <joint name="${prefix}_column_joint" type="fixed">
            <origin xyz="${reflect_x*column_joint_x} ${reflect_y*column_joint_y} ${column_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_column_link"/>            
        </joint>

        <link name="${prefix}_column_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${column_radius}" length = "${column_length}"/>
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                     <cylinder radius="${column_radius}" length = "${column_length}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${column_mass}" r="${column_radius}" h="${column_length}" />
        </link>

        <gazebo reference="${prefix}_column_link">
            <material>Gazebo/Gray</material>
        </gazebo>       
    </xacro:macro>

    <!-- Macro for robot base -->
    <xacro:macro name="my_robot_base_gazebo">
        <link name="base_footprint">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
            </visual>
        </link>
        <gazebo reference="base_footprint">
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 0.08" rpy="0 0 0" />        
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <!--  robot base link -->
        <link name="base_link">
            <visual>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}"/>
                </geometry>
                <material name="yellow" />
            </visual>
            <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                     <box size="${base_size_x} ${base_size_y} ${base_size_z}"/>
                </geometry>
            </collision>   
            <box_inertial_matrix  m="${base_mass}" x="${base_size_x}" y="${base_size_y}" z="${base_size_z}" />
        </link>

        <gazebo reference="base_link">
            <material>Gazebo/Yellow</material>
        </gazebo>

         <!--  robot up board link -->
        <joint name="base_up_board_joint" type="fixed">
            <origin xyz="0 0 ${up_board_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="up_board_link"/>
        </joint>

        <link name="up_board_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${up_board_size_x} ${up_board_size_y} ${up_board_size_z}"/>
                </geometry>
                <material name="yellow"/>                 
             </visual>
             <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${up_board_size_x} ${up_board_size_y} ${up_board_size_z}"/>
                </geometry>
             </collision>
            <box_inertial_matrix  m="${up_board_mass}" x="${up_board_size_x}" y="${up_board_size_y}" z="${up_board_size_z}" />
        </link>

        <gazebo reference="up_board_link">
            <material>Gazebo/Yellow</material>
        </gazebo>

        <!--  robot battery link -->
         <joint name="battery_joint" type="fixed">
            <origin xyz="${battery_joint_x} 0 ${battery_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="battery_link"/>
        </joint>

        <link name="battery_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${battery_size_x} ${battery_size_y} ${battery_size_z}"/>
                </geometry>
                <material name="blue"/>                 
             </visual>
             <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${battery_size_x} ${battery_size_y} ${battery_size_z}"/>
                </geometry>
             </collision>
            <box_inertial_matrix  m="${battery_mass}" x="${battery_size_x}" y="${battery_size_y}" z="${battery_size_z}" />
        </link>

        <gazebo reference="battery_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <!--  robot bogies link -->
        <joint name="bogies_joint" type="fixed">
            <origin xyz="${bogies_joint_x} 0 ${bogies_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="bogies_link"/>            
        </joint>

        <link name="bogies_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${bogies_radius}" length="${bogies_length}"/>
                </geometry>
                <material name="gray"/>                 
             </visual>
             <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${bogies_radius}" length="${bogies_length}"/>
                </geometry>
             </collision>
            <cylinder_inertial_matrix  m="${bogies_mass}" r="${bogies_radius}" h="${bogies_length}" />
        </link>

        <gazebo reference="bogies_link">
            <material>Gazebo/Black</material>
        </gazebo>

        <!--  robot back wheel link -->
        <joint name="back_wheel_joint" type="continuous">
            <origin xyz="0 0 ${back_wheel_joint_z}" rpy="0 0 0"/>
            <parent link="bogies_link"/>
            <child link="back_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="back_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                     <sphere radius="${back_wheel_radius}" />
                </geometry>
                <material name=""/>                 
             </visual>
             <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${back_wheel_radius}" />
                </geometry>
             </collision>
            <sphere_inertial_matrix  m="${back_wheel_mass}" r="${back_wheel_radius}" />
        </link>

        <gazebo reference="back_wheel_link">
            <material>Gazebo/Gray</material>
        </gazebo>

       

        <motor prefix="left"   reflect="-1"/>
        <motor prefix="right" reflect="1"/>

        <wheel prefix="left"  reflect="-1"/>
        <wheel prefix="right" reflect="1"/>

        <column prefix="one"  reflect_x="1" reflect_y="1"/>
        <column prefix="two"  reflect_x="1" reflect_y="-1"/>
        <column prefix="three"  reflect_x="-1" reflect_y="1"/>
        <column prefix="four"  reflect_x="-1" reflect_y="-1"/>


      

        <!-- controller -->
        <gazebo>
            <plugin name="differential_drive_controller" 
                    filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>true</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>${(wheel_joint_y+motor_joint_y)*2}</wheelSeparation>
                <wheelDiameter>${2*wheel_radius}</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>30</wheelTorque>
                <wheelAcceleration>1.8</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame> 
                <odometryTopic>odom</odometryTopic> 
                <robotBaseFrame>base_footprint</robotBaseFrame>
            </plugin>
        </gazebo> 
    </xacro:macro>

</robot>